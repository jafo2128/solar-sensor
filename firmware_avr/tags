!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT	fatfs/ff.c	137;"	d	file:
ACMD13	drivers/diskio.c	36;"	d	file:
ACMD23	drivers/diskio.c	41;"	d	file:
ACMD41	drivers/diskio.c	31;"	d	file:
AM_ARC	fatfs/ff.h	312;"	d
AM_DIR	fatfs/ff.h	311;"	d
AM_HID	fatfs/ff.h	307;"	d
AM_LFN	fatfs/ff.h	310;"	d
AM_MASK	fatfs/ff.h	313;"	d
AM_RDO	fatfs/ff.h	306;"	d
AM_SYS	fatfs/ff.h	308;"	d
AM_VOL	fatfs/ff.h	309;"	d
ANALOG_DDR	ss.h	14;"	d
ANALOG_PIN	ss.h	15;"	d
AR	Makefile	/^AR		= $(AVR_TOOLS_PATH)\/avr-ar$/;"	m
AS	Makefile	/^AS		= $(AVR_TOOLS_PATH)\/avr-as$/;"	m
AT90_UART	drivers/uart.c	65;"	d	file:
AT90_UART	drivers/uart.c	74;"	d	file:
ATA_GET_MODEL	drivers/diskio.h	67;"	d
ATA_GET_REV	drivers/diskio.h	66;"	d
ATA_GET_SN	drivers/diskio.h	68;"	d
ATMEGA_UART	drivers/uart.c	101;"	d	file:
ATMEGA_USART	drivers/uart.c	145;"	d	file:
ATMEGA_USART	drivers/uart.c	163;"	d	file:
ATMEGA_USART	drivers/uart.c	84;"	d	file:
ATMEGA_USART	drivers/uart.c	92;"	d	file:
ATMEGA_USART0	drivers/uart.c	110;"	d	file:
ATMEGA_USART0	drivers/uart.c	126;"	d	file:
ATMEGA_USART0	drivers/uart.c	155;"	d	file:
ATMEGA_USART0	drivers/uart.c	175;"	d	file:
ATMEGA_USART0	drivers/uart.c	184;"	d	file:
ATMEGA_USART0	drivers/uart.c	200;"	d	file:
ATMEGA_USART0	drivers/uart.c	209;"	d	file:
ATMEGA_USART1	drivers/uart.c	111;"	d	file:
ATMEGA_USART1	drivers/uart.c	127;"	d	file:
ATMEGA_USART1	drivers/uart.c	185;"	d	file:
ATMEGA_USART1	drivers/uart.c	210;"	d	file:
AVR_TOOLS_PATH	Makefile	/^AVR_TOOLS_PATH	= \/usr\/bin$/;"	m
BASH	Makefile	/^BASH := $(shell which bash || which bash)$/;"	m
BIT0	ss.h	32;"	d
BIT1	ss.h	33;"	d
BIT2	ss.h	34;"	d
BIT3	ss.h	35;"	d
BIT4	ss.h	36;"	d
BIT5	ss.h	37;"	d
BIT6	ss.h	38;"	d
BIT7	ss.h	39;"	d
BPB_BkBootSec	fatfs/ff.c	423;"	d	file:
BPB_BytsPerSec	fatfs/ff.c	401;"	d	file:
BPB_ExtFlags	fatfs/ff.c	419;"	d	file:
BPB_FATSz16	fatfs/ff.c	408;"	d	file:
BPB_FATSz32	fatfs/ff.c	418;"	d	file:
BPB_FSInfo	fatfs/ff.c	422;"	d	file:
BPB_FSVer	fatfs/ff.c	420;"	d	file:
BPB_HiddSec	fatfs/ff.c	411;"	d	file:
BPB_Media	fatfs/ff.c	407;"	d	file:
BPB_NumFATs	fatfs/ff.c	404;"	d	file:
BPB_NumHeads	fatfs/ff.c	410;"	d	file:
BPB_RootClus	fatfs/ff.c	421;"	d	file:
BPB_RootEntCnt	fatfs/ff.c	405;"	d	file:
BPB_RsvdSecCnt	fatfs/ff.c	403;"	d	file:
BPB_SecPerClus	fatfs/ff.c	402;"	d	file:
BPB_SecPerTrk	fatfs/ff.c	409;"	d	file:
BPB_TotSec16	fatfs/ff.c	406;"	d	file:
BPB_TotSec32	fatfs/ff.c	412;"	d	file:
BS_55AA	fatfs/ff.c	435;"	d	file:
BS_BootSig	fatfs/ff.c	414;"	d	file:
BS_BootSig32	fatfs/ff.c	425;"	d	file:
BS_DrvNum	fatfs/ff.c	413;"	d	file:
BS_DrvNum32	fatfs/ff.c	424;"	d	file:
BS_FilSysType	fatfs/ff.c	417;"	d	file:
BS_FilSysType32	fatfs/ff.c	428;"	d	file:
BS_OEMName	fatfs/ff.c	400;"	d	file:
BS_VolID	fatfs/ff.c	415;"	d	file:
BS_VolID32	fatfs/ff.c	426;"	d	file:
BS_VolLab	fatfs/ff.c	416;"	d	file:
BS_VolLab32	fatfs/ff.c	427;"	d	file:
BS_jmpBoot	fatfs/ff.c	399;"	d	file:
BUFF_LOG	ss.c	170;"	d	file:
BUFF_MAX	ss.c	138;"	d	file:
BUFF_OUT	ss.c	193;"	d	file:
BYTE	fatfs/integer.h	/^typedef unsigned char	BYTE;$/;"	t
CARD_BUFF_SZ	ss.h	17;"	d
CC	Makefile	/^CC		= $(AVR_TOOLS_PATH)\/avr-gcc$/;"	m
CC_CFREQ	Makefile	/^CC_CFREQ	= -DF_CPU=8000000L$/;"	m
CC_CMACH	Makefile	/^CC_CMACH	= -mmcu=atmega328p $/;"	m
CC_DMACH	Makefile	/^CC_DMACH	= -D__AVR_ATmega328P__$/;"	m
CHAR	fatfs/integer.h	/^typedef char			CHAR;$/;"	t
CMD0	drivers/diskio.c	29;"	d	file:
CMD1	drivers/diskio.c	30;"	d	file:
CMD10	drivers/diskio.c	34;"	d	file:
CMD12	drivers/diskio.c	35;"	d	file:
CMD16	drivers/diskio.c	37;"	d	file:
CMD17	drivers/diskio.c	38;"	d	file:
CMD18	drivers/diskio.c	39;"	d	file:
CMD23	drivers/diskio.c	40;"	d	file:
CMD24	drivers/diskio.c	42;"	d	file:
CMD25	drivers/diskio.c	43;"	d	file:
CMD32	drivers/diskio.c	44;"	d	file:
CMD33	drivers/diskio.c	45;"	d	file:
CMD38	drivers/diskio.c	46;"	d	file:
CMD55	drivers/diskio.c	47;"	d	file:
CMD58	drivers/diskio.c	48;"	d	file:
CMD8	drivers/diskio.c	32;"	d	file:
CMD9	drivers/diskio.c	33;"	d	file:
CPPFILT	Makefile	/^CPPFILT = $(AVR_TOOLS_PATH)\/avr-c++filt$/;"	m
CREATE_LINKMAP	fatfs/ff.h	317;"	d
CS_HIGH	drivers/diskio.c	11;"	d	file:
CS_LOW	drivers/diskio.c	10;"	d	file:
CTRL_EJECT	drivers/diskio.h	55;"	d
CTRL_ERASE_SECTOR	drivers/diskio.h	50;"	d
CTRL_FORMAT	drivers/diskio.h	56;"	d
CTRL_LOCK	drivers/diskio.h	54;"	d
CTRL_POWER	drivers/diskio.h	53;"	d
CTRL_SYNC	drivers/diskio.h	46;"	d
CT_BLOCK	drivers/diskio.h	75;"	d
CT_MMC	drivers/diskio.h	71;"	d
CT_SD1	drivers/diskio.h	72;"	d
CT_SD2	drivers/diskio.h	73;"	d
CT_SDC	drivers/diskio.h	74;"	d
CardType	drivers/diskio.c	/^BYTE CardType;			\/* Card type flags *\/$/;"	v	file:
CurrVol	fatfs/ff.c	/^BYTE CurrVol;			\/* Current drive *\/$/;"	v	file:
DDE	fatfs/ff.c	456;"	d	file:
DDR_SPI	drivers/spi.h	8;"	d
DD_MISO	drivers/spi.h	11;"	d
DD_MOSI	drivers/spi.h	10;"	d
DD_SCK	drivers/spi.h	12;"	d
DD_SS	drivers/spi.h	9;"	d
DEBUG	Makefile	/^DEBUG := $(shell grep "^\\#define DEBUG" config.h)$/;"	m
DEBUG	config.h	13;"	d
DECODED	drivers/ir_remote.h	65;"	d
DEF_NAMEBUF	fatfs/ff.c	489;"	d	file:
DEF_NAMEBUF	fatfs/ff.c	495;"	d	file:
DEF_NAMEBUF	fatfs/ff.c	500;"	d	file:
DEF_NAMEBUF	fatfs/ff.c	505;"	d	file:
DIR	fatfs/ff.h	/^} DIR;$/;"	t	typeref:struct:__anon8
DIR_Attr	fatfs/ff.c	438;"	d	file:
DIR_CrtDate	fatfs/ff.c	442;"	d	file:
DIR_CrtTime	fatfs/ff.c	441;"	d	file:
DIR_CrtTimeTenth	fatfs/ff.c	440;"	d	file:
DIR_FileSize	fatfs/ff.c	448;"	d	file:
DIR_FstClusHI	fatfs/ff.c	444;"	d	file:
DIR_FstClusLO	fatfs/ff.c	447;"	d	file:
DIR_LstAccDate	fatfs/ff.c	443;"	d	file:
DIR_NTres	fatfs/ff.c	439;"	d	file:
DIR_Name	fatfs/ff.c	437;"	d	file:
DIR_WrtDate	fatfs/ff.c	446;"	d	file:
DIR_WrtTime	fatfs/ff.c	445;"	d	file:
DRESULT	drivers/diskio.h	/^    } DRESULT;$/;"	t	typeref:enum:__anon3
DS3231_A1F	drivers/ds3231.h	24;"	d
DS3231_A1IE	drivers/ds3231.h	19;"	d
DS3231_A2F	drivers/ds3231.h	25;"	d
DS3231_A2IE	drivers/ds3231.h	20;"	d
DS3231_AGING_OFFSET_ADDR	drivers/ds3231.h	15;"	d
DS3231_ALARM1_ADDR	drivers/ds3231.h	11;"	d
DS3231_ALARM2_ADDR	drivers/ds3231.h	12;"	d
DS3231_CONTROL_ADDR	drivers/ds3231.h	13;"	d
DS3231_I2C_ADDR	drivers/ds3231.h	7;"	d
DS3231_INTCN	drivers/ds3231.h	21;"	d
DS3231_OSF	drivers/ds3231.h	26;"	d
DS3231_STATUS_ADDR	drivers/ds3231.h	14;"	d
DS3231_TEMPERATURE_ADDR	drivers/ds3231.h	16;"	d
DS3231_TIME_CAL_ADDR	drivers/ds3231.h	10;"	d
DS3231_clear_a1f	drivers/ds3231.c	/^void DS3231_clear_a1f(void)$/;"	f
DS3231_clear_a2f	drivers/ds3231.c	/^void DS3231_clear_a2f(void)$/;"	f
DS3231_get	drivers/ds3231.c	/^void DS3231_get(struct ts *t)$/;"	f
DS3231_get_a1	drivers/ds3231.c	/^void DS3231_get_a1(char *buf, const uint8_t len)$/;"	f
DS3231_get_a2	drivers/ds3231.c	/^void DS3231_get_a2(char *buf, const uint8_t len)$/;"	f
DS3231_get_addr	drivers/ds3231.c	/^uint8_t DS3231_get_addr(const uint8_t addr)$/;"	f
DS3231_get_aging	drivers/ds3231.c	/^int8_t DS3231_get_aging(void)$/;"	f
DS3231_get_sreg	drivers/ds3231.c	/^uint8_t DS3231_get_sreg(void)$/;"	f
DS3231_get_treg	drivers/ds3231.c	/^float DS3231_get_treg()$/;"	f
DS3231_init	drivers/ds3231.c	/^void DS3231_init(const uint8_t ctrl_reg)$/;"	f
DS3231_set	drivers/ds3231.c	/^void DS3231_set(struct ts t)$/;"	f
DS3231_set_a1	drivers/ds3231.c	/^void DS3231_set_a1(const uint8_t s, const uint8_t mi, const uint8_t h, const uint8_t d, const uint8_t * flags)$/;"	f
DS3231_set_a2	drivers/ds3231.c	/^void DS3231_set_a2(const uint8_t mi, const uint8_t h, const uint8_t d, const uint8_t * flags)$/;"	f
DS3231_set_addr	drivers/ds3231.c	/^void DS3231_set_addr(const uint8_t addr, const uint8_t val)$/;"	f
DS3231_set_aging	drivers/ds3231.c	/^void DS3231_set_aging(const int8_t val)$/;"	f
DS3231_set_creg	drivers/ds3231.c	/^void DS3231_set_creg(const uint8_t val)$/;"	f
DS3231_set_sreg	drivers/ds3231.c	/^void DS3231_set_sreg(const uint8_t val)$/;"	f
DS3231_triggered_a1	drivers/ds3231.c	/^uint8_t DS3231_triggered_a1(void)$/;"	f
DS3231_triggered_a2	drivers/ds3231.c	/^uint8_t DS3231_triggered_a2(void)$/;"	f
DSTATUS	drivers/diskio.h	/^    typedef BYTE DSTATUS;$/;"	t
DWORD	fatfs/integer.h	/^typedef unsigned long	DWORD;$/;"	t
ENTER_FF	fatfs/ff.c	130;"	d	file:
ENTER_FF	fatfs/ff.c	133;"	d	file:
EOF	fatfs/ff.h	242;"	d
ERR	drivers/ir_remote.h	64;"	d
ExCvt	fatfs/ff.c	/^const BYTE ExCvt[] = _EXCVT;	\/* Upper conversion table for extended chars *\/$/;"	v	file:
FATFS	fatfs/ff.h	/^} FATFS;$/;"	t	typeref:struct:__anon6
FA_CREATE_ALWAYS	fatfs/ff.h	290;"	d
FA_CREATE_NEW	fatfs/ff.h	289;"	d
FA_OPEN_ALWAYS	fatfs/ff.h	291;"	d
FA_OPEN_EXISTING	fatfs/ff.h	284;"	d
FA_READ	fatfs/ff.h	283;"	d
FA_WRITE	fatfs/ff.h	288;"	d
FA__DIRTY	fatfs/ff.h	293;"	d
FA__ERROR	fatfs/ff.h	285;"	d
FA__WRITTEN	fatfs/ff.h	292;"	d
FCLK_FAST	drivers/diskio.c	19;"	d	file:
FCLK_SLOW	drivers/diskio.c	18;"	d	file:
FIL	fatfs/ff.h	/^} FIL;$/;"	t	typeref:struct:__anon7
FILESEM	fatfs/ff.c	/^} FILESEM;$/;"	t	typeref:struct:__anon4	file:
FILINFO	fatfs/ff.h	/^} FILINFO;$/;"	t	typeref:struct:__anon9
FNV_BASIS_32	drivers/ir_remote.h	80;"	d
FNV_PRIME_32	drivers/ir_remote.h	79;"	d
FRACT_INC	drivers/timer.c	16;"	d	file:
FRACT_MAX	drivers/timer.c	17;"	d	file:
FREE_BUF	fatfs/ff.c	491;"	d	file:
FREE_BUF	fatfs/ff.c	497;"	d	file:
FREE_BUF	fatfs/ff.c	502;"	d	file:
FREE_BUF	fatfs/ff.c	509;"	d	file:
FRESULT	fatfs/ff.h	/^} FRESULT;$/;"	t	typeref:enum:__anon10
FR_DENIED	fatfs/ff.h	/^	FR_DENIED,				\/* (7) Access denied due to prohibited access or directory full *\/$/;"	e	enum:__anon10
FR_DISK_ERR	fatfs/ff.h	/^	FR_DISK_ERR,			\/* (1) A hard error occurred in the low level disk I\/O layer *\/$/;"	e	enum:__anon10
FR_EXIST	fatfs/ff.h	/^	FR_EXIST,				\/* (8) Access denied due to prohibited access *\/$/;"	e	enum:__anon10
FR_INT_ERR	fatfs/ff.h	/^	FR_INT_ERR,				\/* (2) Assertion failed *\/$/;"	e	enum:__anon10
FR_INVALID_DRIVE	fatfs/ff.h	/^	FR_INVALID_DRIVE,		\/* (11) The logical drive number is invalid *\/$/;"	e	enum:__anon10
FR_INVALID_NAME	fatfs/ff.h	/^	FR_INVALID_NAME,		\/* (6) The path name format is invalid *\/$/;"	e	enum:__anon10
FR_INVALID_OBJECT	fatfs/ff.h	/^	FR_INVALID_OBJECT,		\/* (9) The file\/directory object is invalid *\/$/;"	e	enum:__anon10
FR_INVALID_PARAMETER	fatfs/ff.h	/^	FR_INVALID_PARAMETER	\/* (19) Given parameter is invalid *\/$/;"	e	enum:__anon10
FR_LOCKED	fatfs/ff.h	/^	FR_LOCKED,				\/* (16) The operation is rejected according to the file sharing policy *\/$/;"	e	enum:__anon10
FR_MKFS_ABORTED	fatfs/ff.h	/^	FR_MKFS_ABORTED,		\/* (14) The f_mkfs() aborted due to any parameter error *\/$/;"	e	enum:__anon10
FR_NOT_ENABLED	fatfs/ff.h	/^	FR_NOT_ENABLED,			\/* (12) The volume has no work area *\/$/;"	e	enum:__anon10
FR_NOT_ENOUGH_CORE	fatfs/ff.h	/^	FR_NOT_ENOUGH_CORE,		\/* (17) LFN working buffer could not be allocated *\/$/;"	e	enum:__anon10
FR_NOT_READY	fatfs/ff.h	/^	FR_NOT_READY,			\/* (3) The physical drive cannot work *\/$/;"	e	enum:__anon10
FR_NO_FILE	fatfs/ff.h	/^	FR_NO_FILE,				\/* (4) Could not find the file *\/$/;"	e	enum:__anon10
FR_NO_FILESYSTEM	fatfs/ff.h	/^	FR_NO_FILESYSTEM,		\/* (13) There is no valid FAT volume *\/$/;"	e	enum:__anon10
FR_NO_PATH	fatfs/ff.h	/^	FR_NO_PATH,				\/* (5) Could not find the path *\/$/;"	e	enum:__anon10
FR_OK	fatfs/ff.h	/^	FR_OK = 0,				\/* (0) Succeeded *\/$/;"	e	enum:__anon10
FR_TIMEOUT	fatfs/ff.h	/^	FR_TIMEOUT,				\/* (15) Could not get a grant to access the volume within defined period *\/$/;"	e	enum:__anon10
FR_TOO_MANY_OPEN_FILES	fatfs/ff.h	/^	FR_TOO_MANY_OPEN_FILES,	\/* (18) Number of open files > _FS_SHARE *\/$/;"	e	enum:__anon10
FR_WRITE_PROTECTED	fatfs/ff.h	/^	FR_WRITE_PROTECTED,		\/* (10) The physical drive is write protected *\/$/;"	e	enum:__anon10
FSI_Free_Count	fatfs/ff.c	431;"	d	file:
FSI_LeadSig	fatfs/ff.c	429;"	d	file:
FSI_Nxt_Free	fatfs/ff.c	432;"	d	file:
FSI_StrucSig	fatfs/ff.c	430;"	d	file:
FS_FAT12	fatfs/ff.h	299;"	d
FS_FAT16	fatfs/ff.h	300;"	d
FS_FAT32	fatfs/ff.h	301;"	d
FatFs	fatfs/ff.c	/^FATFS *FatFs[_VOLUMES];	\/* Pointer to the file system objects (logical drives) *\/$/;"	v	file:
Files	fatfs/ff.c	/^FILESEM	Files[_FS_LOCK];	\/* File lock semaphores *\/$/;"	v	file:
Fsid	fatfs/ff.c	/^WORD Fsid;				\/* File system mount ID *\/$/;"	v	file:
GAP_TICKS	drivers/ir_remote.h	47;"	d
GET_BLOCK_SIZE	drivers/diskio.h	49;"	d
GET_SECTOR_COUNT	drivers/diskio.h	47;"	d
GET_SECTOR_SIZE	drivers/diskio.h	48;"	d
HIGH	ss.h	27;"	d
I2C_ACK	drivers/serial_bitbang.h	42;"	d
I2C_MASTER_DIR	port_config.h	7;"	d
I2C_MASTER_IN	port_config.h	9;"	d
I2C_MASTER_OUT	port_config.h	8;"	d
I2C_MASTER_SCL	port_config.h	10;"	d
I2C_MASTER_SDA	port_config.h	11;"	d
I2C_MISSING_SCL_PULLUP	drivers/serial_bitbang.h	44;"	d
I2C_MISSING_SDA_PULLUP	drivers/serial_bitbang.h	45;"	d
I2C_NAK	drivers/serial_bitbang.h	43;"	d
I2C_NO_ADDR_SHIFT	drivers/serial_bitbang.h	33;"	d
I2C_OK	drivers/serial_bitbang.h	41;"	d
I2C_READ	drivers/serial_bitbang.h	31;"	d
I2C_SDA_WAIT	drivers/serial_bitbang.h	38;"	d
I2C_WRITE	drivers/serial_bitbang.h	32;"	d
INIT_BUF	fatfs/ff.c	490;"	d	file:
INIT_BUF	fatfs/ff.c	496;"	d	file:
INIT_BUF	fatfs/ff.c	501;"	d	file:
INIT_BUF	fatfs/ff.c	506;"	d	file:
INT	fatfs/integer.h	/^typedef int				INT;$/;"	t
IR	port_config.h	16;"	d
IR_CCR	drivers/ir_remote.h	52;"	d
IR_DDR	port_config.h	14;"	d
IR_PIN	port_config.h	15;"	d
IR_REMOTE	config.h	6;"	d
ISR	drivers/ir_remote.c	/^ISR (TIMER_INTR_NAME)$/;"	f
ISR	drivers/timer.c	/^ISR(TIMER0_OVF_vect)$/;"	f
ISR	drivers/uart.c	/^ISR (UART0_RECEIVE_INTERRUPT)	$/;"	f
ISR	drivers/uart.c	/^ISR (UART0_TRANSMIT_INTERRUPT)$/;"	f
ISR	drivers/uart.c	/^ISR(UART1_RECEIVE_INTERRUPT)$/;"	f
ISR	drivers/uart.c	/^ISR(UART1_TRANSMIT_INTERRUPT)$/;"	f
IsDBCS1	fatfs/ff.c	360;"	d	file:
IsDBCS1	fatfs/ff.c	362;"	d	file:
IsDBCS1	fatfs/ff.c	373;"	d	file:
IsDBCS2	fatfs/ff.c	366;"	d	file:
IsDBCS2	fatfs/ff.c	368;"	d	file:
IsDBCS2	fatfs/ff.c	374;"	d	file:
IsDigit	fatfs/ff.c	355;"	d	file:
IsLower	fatfs/ff.c	354;"	d	file:
IsUpper	fatfs/ff.c	353;"	d	file:
JACK_DETECT	ss.h	11;"	d
LD	Makefile	/^LD		= $(AVR_TOOLS_PATH)\/avr-ld$/;"	m
LD2PD	fatfs/ff.h	41;"	d
LD2PD	fatfs/ff.h	45;"	d
LD2PT	fatfs/ff.h	42;"	d
LD2PT	fatfs/ff.h	46;"	d
LDFLAGS	Makefile	/^LDFLAGS		=$/;"	m
LDIR_Attr	fatfs/ff.c	450;"	d	file:
LDIR_Chksum	fatfs/ff.c	452;"	d	file:
LDIR_FstClusLO	fatfs/ff.c	453;"	d	file:
LDIR_Ord	fatfs/ff.c	449;"	d	file:
LDIR_Type	fatfs/ff.c	451;"	d	file:
LD_DWORD	fatfs/ff.h	326;"	d
LD_DWORD	fatfs/ff.h	331;"	d
LD_WORD	fatfs/ff.h	325;"	d
LD_WORD	fatfs/ff.h	330;"	d
LEAVE_FF	fatfs/ff.c	131;"	d	file:
LEAVE_FF	fatfs/ff.c	134;"	d	file:
LLE	fatfs/ff.c	455;"	d	file:
LONG	fatfs/integer.h	/^typedef long			LONG;$/;"	t
LOW	ss.h	28;"	d
LTOL	drivers/ir_remote.h	43;"	d
LfnBuf	fatfs/ff.c	/^static WCHAR LfnBuf[_MAX_LFN+1];$/;"	v	file:
LfnOfs	fatfs/ff.c	/^const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	\/* Offset of LFN chars in the directory entry *\/$/;"	v	file:
MARK	drivers/ir_remote.h	55;"	d
MARK_EXCESS	drivers/ir_remote.h	20;"	d
MATCH	drivers/ir_remote.c	/^uint8_t MATCH(const uint16_t measured, const uint16_t desired)$/;"	f
MAX_PATH	ss.h	18;"	d
MBR_Table	fatfs/ff.c	433;"	d	file:
MICROSECONDS_PER_TIMER0_OVERFLOW	drivers/timer.c	8;"	d	file:
MILLIS_INC	drivers/timer.c	11;"	d	file:
MIN_FAT16	fatfs/ff.c	391;"	d	file:
MIN_FAT32	fatfs/ff.c	392;"	d	file:
MIN_RC5_SAMPLES	drivers/ir_remote.h	75;"	d
MMC_GET_CID	drivers/diskio.h	61;"	d
MMC_GET_CSD	drivers/diskio.h	60;"	d
MMC_GET_OCR	drivers/diskio.h	62;"	d
MMC_GET_SDSTAT	drivers/diskio.h	63;"	d
MMC_GET_TYPE	drivers/diskio.h	59;"	d
NDDE	fatfs/ff.c	457;"	d	file:
NS	fatfs/ff.c	380;"	d	file:
NS_BODY	fatfs/ff.c	384;"	d	file:
NS_DOT	fatfs/ff.c	386;"	d	file:
NS_EXT	fatfs/ff.c	385;"	d	file:
NS_LAST	fatfs/ff.c	383;"	d	file:
NS_LFN	fatfs/ff.c	382;"	d	file:
NS_LOSS	fatfs/ff.c	381;"	d	file:
N_FATS	fatfs/ff.c	3798;"	d	file:
N_ROOTDIR	fatfs/ff.c	3797;"	d	file:
OBJCOPY	Makefile	/^OBJCOPY = $(AVR_TOOLS_PATH)\/avr-objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(AVR_TOOLS_PATH)\/avr-objdump$/;"	m
OBJS	Makefile	/^OBJS := $(patsubst %.c,%.o,$(SRCS))$/;"	m
OPT_FLAGS	Makefile	/^OPT_FLAGS = -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums \\$/;"	m
OP_AUTOMATIC	ss.c	117;"	d	file:
OP_MANUAL	ss.c	116;"	d	file:
PARTITION	fatfs/ff.h	/^} PARTITION;$/;"	t	typeref:struct:__anon5
PIN_JACK_DETECT	ss.h	7;"	d
PIN_RANDOM	ss.h	9;"	d
PIN_VBAT_DETECT	ss.h	8;"	d
PORT_SPI	drivers/spi.h	7;"	d
PRJ	Makefile	/^PRJ			= ss$/;"	m
P_RANDOM	ss.h	13;"	d
RAWBUF	drivers/ir_remote.h	16;"	d
RC5	drivers/ir_remote.h	69;"	d
RC5_T1	drivers/ir_remote.h	76;"	d
RES_ERROR	drivers/diskio.h	/^        RES_ERROR,              \/* 1: R\/W Error *\/$/;"	e	enum:__anon3
RES_NOTRDY	drivers/diskio.h	/^        RES_NOTRDY,             \/* 3: Not Ready *\/$/;"	e	enum:__anon3
RES_OK	drivers/diskio.h	/^        RES_OK = 0,             \/* 0: Successful *\/$/;"	e	enum:__anon3
RES_PARERR	drivers/diskio.h	/^        RES_PARERR              \/* 4: Invalid Parameter *\/$/;"	e	enum:__anon3
RES_WRPRT	drivers/diskio.h	/^        RES_WRPRT,              \/* 2: Write Protected *\/$/;"	e	enum:__anon3
SENSOR_ID	ss.c	85;"	d	file:
SHORT	fatfs/integer.h	/^typedef short			SHORT;$/;"	t
SIZE	Makefile	/^SIZE    = $(AVR_TOOLS_PATH)\/avr-size$/;"	m
SOCKINS	drivers/diskio.c	16;"	d	file:
SOCKWP	drivers/diskio.c	17;"	d	file:
SPACE	drivers/ir_remote.h	56;"	d
SRCS	Makefile	/^SRCS := $(wildcard *.c)$/;"	m
SS	fatfs/ff.c	119;"	d	file:
SS	fatfs/ff.c	121;"	d	file:
STATE_IDLE	drivers/ir_remote.h	59;"	d
STATE_MARK	drivers/ir_remote.h	60;"	d
STATE_SPACE	drivers/ir_remote.h	61;"	d
STATE_STOP	drivers/ir_remote.h	62;"	d
STA_NODISK	drivers/diskio.h	40;"	d
STA_NOINIT	drivers/diskio.h	39;"	d
STA_PROTECT	drivers/diskio.h	41;"	d
ST_DWORD	fatfs/ff.h	328;"	d
ST_DWORD	fatfs/ff.h	333;"	d
ST_WORD	fatfs/ff.h	327;"	d
ST_WORD	fatfs/ff.h	332;"	d
SUBDIRS	Makefile	/^SUBDIRS = drivers fatfs$/;"	m
SYSCLOCK	drivers/ir_remote.h	94;"	d
SYSCLOCK	drivers/ir_remote.h	96;"	d
SZ_DIR	fatfs/ff.c	454;"	d	file:
SZ_PTE	fatfs/ff.c	434;"	d	file:
Stat	drivers/diskio.c	/^DSTATUS Stat = STA_NOINIT;	\/* Disk status *\/$/;"	v	file:
TARGET	Makefile	/^TARGET	:= DEBUG$/;"	m
TARGET	Makefile	/^TARGET	:= RELEASE$/;"	m
TCHAR	fatfs/ff.h	/^typedef WCHAR TCHAR;$/;"	t
TCHAR	fatfs/ff.h	/^typedef char TCHAR;$/;"	t
TICKS_HIGH	drivers/ir_remote.h	50;"	d
TICKS_LOW	drivers/ir_remote.h	49;"	d
TIMER_CONFIG_KHZ	drivers/ir_remote.h	105;"	d
TIMER_CONFIG_NORMAL	drivers/ir_remote.h	114;"	d
TIMER_CONFIG_NORMAL	drivers/ir_remote.h	121;"	d
TIMER_COUNT_TOP	drivers/ir_remote.h	112;"	d
TIMER_DISABLE_INTR	drivers/ir_remote.h	103;"	d
TIMER_DISABLE_PWM	drivers/ir_remote.h	101;"	d
TIMER_ENABLE_INTR	drivers/ir_remote.h	102;"	d
TIMER_ENABLE_PWM	drivers/ir_remote.h	100;"	d
TIMER_INTR_NAME	drivers/ir_remote.h	104;"	d
TIMER_RESET	drivers/ir_remote.h	99;"	d
TOLERANCE	drivers/ir_remote.h	42;"	d
Timer1	drivers/diskio.c	/^BYTE Timer1, Timer2;	\/* 100Hz decrement timer *\/$/;"	v	file:
Timer2	drivers/diskio.c	/^BYTE Timer1, Timer2;	\/* 100Hz decrement timer *\/$/;"	v	file:
UART0_CONTROL	drivers/uart.c	105;"	d	file:
UART0_CONTROL	drivers/uart.c	117;"	d	file:
UART0_CONTROL	drivers/uart.c	133;"	d	file:
UART0_CONTROL	drivers/uart.c	149;"	d	file:
UART0_CONTROL	drivers/uart.c	159;"	d	file:
UART0_CONTROL	drivers/uart.c	167;"	d	file:
UART0_CONTROL	drivers/uart.c	179;"	d	file:
UART0_CONTROL	drivers/uart.c	191;"	d	file:
UART0_CONTROL	drivers/uart.c	204;"	d	file:
UART0_CONTROL	drivers/uart.c	216;"	d	file:
UART0_CONTROL	drivers/uart.c	69;"	d	file:
UART0_CONTROL	drivers/uart.c	78;"	d	file:
UART0_CONTROL	drivers/uart.c	88;"	d	file:
UART0_CONTROL	drivers/uart.c	96;"	d	file:
UART0_DATA	drivers/uart.c	106;"	d	file:
UART0_DATA	drivers/uart.c	118;"	d	file:
UART0_DATA	drivers/uart.c	134;"	d	file:
UART0_DATA	drivers/uart.c	150;"	d	file:
UART0_DATA	drivers/uart.c	160;"	d	file:
UART0_DATA	drivers/uart.c	168;"	d	file:
UART0_DATA	drivers/uart.c	180;"	d	file:
UART0_DATA	drivers/uart.c	192;"	d	file:
UART0_DATA	drivers/uart.c	205;"	d	file:
UART0_DATA	drivers/uart.c	217;"	d	file:
UART0_DATA	drivers/uart.c	70;"	d	file:
UART0_DATA	drivers/uart.c	79;"	d	file:
UART0_DATA	drivers/uart.c	89;"	d	file:
UART0_DATA	drivers/uart.c	97;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	102;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	112;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	128;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	146;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	156;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	164;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	176;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	186;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	201;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	211;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	66;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	75;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	85;"	d	file:
UART0_RECEIVE_INTERRUPT	drivers/uart.c	93;"	d	file:
UART0_STATUS	drivers/uart.c	104;"	d	file:
UART0_STATUS	drivers/uart.c	116;"	d	file:
UART0_STATUS	drivers/uart.c	132;"	d	file:
UART0_STATUS	drivers/uart.c	148;"	d	file:
UART0_STATUS	drivers/uart.c	158;"	d	file:
UART0_STATUS	drivers/uart.c	166;"	d	file:
UART0_STATUS	drivers/uart.c	178;"	d	file:
UART0_STATUS	drivers/uart.c	190;"	d	file:
UART0_STATUS	drivers/uart.c	203;"	d	file:
UART0_STATUS	drivers/uart.c	215;"	d	file:
UART0_STATUS	drivers/uart.c	68;"	d	file:
UART0_STATUS	drivers/uart.c	77;"	d	file:
UART0_STATUS	drivers/uart.c	87;"	d	file:
UART0_STATUS	drivers/uart.c	95;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	103;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	114;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	130;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	147;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	157;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	165;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	177;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	188;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	202;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	213;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	67;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	76;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	86;"	d	file:
UART0_TRANSMIT_INTERRUPT	drivers/uart.c	94;"	d	file:
UART0_UDRIE	drivers/uart.c	107;"	d	file:
UART0_UDRIE	drivers/uart.c	119;"	d	file:
UART0_UDRIE	drivers/uart.c	135;"	d	file:
UART0_UDRIE	drivers/uart.c	151;"	d	file:
UART0_UDRIE	drivers/uart.c	161;"	d	file:
UART0_UDRIE	drivers/uart.c	169;"	d	file:
UART0_UDRIE	drivers/uart.c	181;"	d	file:
UART0_UDRIE	drivers/uart.c	193;"	d	file:
UART0_UDRIE	drivers/uart.c	206;"	d	file:
UART0_UDRIE	drivers/uart.c	218;"	d	file:
UART0_UDRIE	drivers/uart.c	71;"	d	file:
UART0_UDRIE	drivers/uart.c	80;"	d	file:
UART0_UDRIE	drivers/uart.c	90;"	d	file:
UART0_UDRIE	drivers/uart.c	98;"	d	file:
UART1_CONTROL	drivers/uart.c	121;"	d	file:
UART1_CONTROL	drivers/uart.c	137;"	d	file:
UART1_CONTROL	drivers/uart.c	195;"	d	file:
UART1_CONTROL	drivers/uart.c	220;"	d	file:
UART1_DATA	drivers/uart.c	122;"	d	file:
UART1_DATA	drivers/uart.c	138;"	d	file:
UART1_DATA	drivers/uart.c	196;"	d	file:
UART1_DATA	drivers/uart.c	221;"	d	file:
UART1_LastRxError	drivers/uart.c	/^static volatile unsigned char UART1_LastRxError;$/;"	v	file:
UART1_RECEIVE_INTERRUPT	drivers/uart.c	113;"	d	file:
UART1_RECEIVE_INTERRUPT	drivers/uart.c	129;"	d	file:
UART1_RECEIVE_INTERRUPT	drivers/uart.c	187;"	d	file:
UART1_RECEIVE_INTERRUPT	drivers/uart.c	212;"	d	file:
UART1_RxBuf	drivers/uart.c	/^static volatile unsigned char UART1_RxBuf[UART_RX_BUFFER_SIZE];$/;"	v	file:
UART1_RxHead	drivers/uart.c	/^static volatile unsigned char UART1_RxHead;$/;"	v	file:
UART1_RxTail	drivers/uart.c	/^static volatile unsigned char UART1_RxTail;$/;"	v	file:
UART1_STATUS	drivers/uart.c	120;"	d	file:
UART1_STATUS	drivers/uart.c	136;"	d	file:
UART1_STATUS	drivers/uart.c	194;"	d	file:
UART1_STATUS	drivers/uart.c	219;"	d	file:
UART1_TRANSMIT_INTERRUPT	drivers/uart.c	115;"	d	file:
UART1_TRANSMIT_INTERRUPT	drivers/uart.c	131;"	d	file:
UART1_TRANSMIT_INTERRUPT	drivers/uart.c	189;"	d	file:
UART1_TRANSMIT_INTERRUPT	drivers/uart.c	214;"	d	file:
UART1_TxBuf	drivers/uart.c	/^static volatile unsigned char UART1_TxBuf[UART_TX_BUFFER_SIZE];$/;"	v	file:
UART1_TxHead	drivers/uart.c	/^static volatile unsigned char UART1_TxHead;$/;"	v	file:
UART1_TxTail	drivers/uart.c	/^static volatile unsigned char UART1_TxTail;$/;"	v	file:
UART1_UDRIE	drivers/uart.c	123;"	d	file:
UART1_UDRIE	drivers/uart.c	139;"	d	file:
UART1_UDRIE	drivers/uart.c	197;"	d	file:
UART1_UDRIE	drivers/uart.c	222;"	d	file:
UART_BAUD_SELECT	drivers/uart.h	64;"	d
UART_BAUD_SELECT_DOUBLE_SPEED	drivers/uart.h	70;"	d
UART_BUFFER_OVERFLOW	drivers/uart.h	93;"	d
UART_FRAME_ERROR	drivers/uart.h	90;"	d
UART_H	drivers/uart.h	2;"	d
UART_LastRxError	drivers/uart.c	/^static volatile unsigned char UART_LastRxError;$/;"	v	file:
UART_NO_DATA	drivers/uart.h	94;"	d
UART_OVERRUN_ERROR	drivers/uart.h	91;"	d
UART_PARITY_ERROR	drivers/uart.h	92;"	d
UART_RX_BUFFER_MASK	drivers/uart.c	50;"	d	file:
UART_RX_BUFFER_SIZE	drivers/uart.h	75;"	d
UART_RxBuf	drivers/uart.c	/^static volatile unsigned char UART_RxBuf[UART_RX_BUFFER_SIZE];$/;"	v	file:
UART_RxHead	drivers/uart.c	/^static volatile unsigned char UART_RxHead;$/;"	v	file:
UART_RxTail	drivers/uart.c	/^static volatile unsigned char UART_RxTail;$/;"	v	file:
UART_TX_BUFFER_MASK	drivers/uart.c	51;"	d	file:
UART_TX_BUFFER_SIZE	drivers/uart.h	79;"	d
UART_TxBuf	drivers/uart.c	/^static volatile unsigned char UART_TxBuf[UART_TX_BUFFER_SIZE];$/;"	v	file:
UART_TxHead	drivers/uart.c	/^static volatile unsigned char UART_TxHead;$/;"	v	file:
UART_TxTail	drivers/uart.c	/^static volatile unsigned char UART_TxTail;$/;"	v	file:
UCHAR	fatfs/integer.h	/^typedef unsigned char	UCHAR;$/;"	t
UINT	fatfs/integer.h	/^typedef unsigned int	UINT;$/;"	t
ULONG	fatfs/integer.h	/^typedef unsigned long	ULONG;$/;"	t
UNKNOWN	drivers/ir_remote.h	73;"	d
USECPERTICK	drivers/ir_remote.h	15;"	d
USHORT	fatfs/integer.h	/^typedef unsigned short	USHORT;$/;"	t
UTOL	drivers/ir_remote.h	44;"	d
VBAT_DETECT	ss.h	12;"	d
WCHAR	fatfs/integer.h	/^typedef unsigned short	WCHAR;$/;"	t
WORD	fatfs/integer.h	/^typedef unsigned short	WORD;$/;"	t
XBEE_ACTIVE_LOW	ss.c	97;"	d	file:
_CODE_PAGE	fatfs/ffconf.h	63;"	d
_CONFIG_H_	config.h	2;"	d
_DF1E	fatfs/ff.c	159;"	d	file:
_DF1E	fatfs/ff.c	169;"	d	file:
_DF1E	fatfs/ff.c	177;"	d	file:
_DF1E	fatfs/ff.c	187;"	d	file:
_DF1S	fatfs/ff.c	158;"	d	file:
_DF1S	fatfs/ff.c	168;"	d	file:
_DF1S	fatfs/ff.c	176;"	d	file:
_DF1S	fatfs/ff.c	186;"	d	file:
_DF1S	fatfs/ff.c	194;"	d	file:
_DF1S	fatfs/ff.c	201;"	d	file:
_DF1S	fatfs/ff.c	208;"	d	file:
_DF1S	fatfs/ff.c	215;"	d	file:
_DF1S	fatfs/ff.c	222;"	d	file:
_DF1S	fatfs/ff.c	229;"	d	file:
_DF1S	fatfs/ff.c	236;"	d	file:
_DF1S	fatfs/ff.c	243;"	d	file:
_DF1S	fatfs/ff.c	250;"	d	file:
_DF1S	fatfs/ff.c	257;"	d	file:
_DF1S	fatfs/ff.c	264;"	d	file:
_DF1S	fatfs/ff.c	271;"	d	file:
_DF1S	fatfs/ff.c	278;"	d	file:
_DF1S	fatfs/ff.c	285;"	d	file:
_DF1S	fatfs/ff.c	292;"	d	file:
_DF1S	fatfs/ff.c	299;"	d	file:
_DF1S	fatfs/ff.c	306;"	d	file:
_DF1S	fatfs/ff.c	313;"	d	file:
_DF1S	fatfs/ff.c	320;"	d	file:
_DF1S	fatfs/ff.c	327;"	d	file:
_DF1S	fatfs/ff.c	334;"	d	file:
_DF1S	fatfs/ff.c	344;"	d	file:
_DF2E	fatfs/ff.c	161;"	d	file:
_DF2S	fatfs/ff.c	160;"	d	file:
_DISKIO_DEFINED	drivers/diskio.h	6;"	d
_DS1E	fatfs/ff.c	163;"	d	file:
_DS1E	fatfs/ff.c	171;"	d	file:
_DS1E	fatfs/ff.c	179;"	d	file:
_DS1E	fatfs/ff.c	189;"	d	file:
_DS1S	fatfs/ff.c	162;"	d	file:
_DS1S	fatfs/ff.c	170;"	d	file:
_DS1S	fatfs/ff.c	178;"	d	file:
_DS1S	fatfs/ff.c	188;"	d	file:
_DS2E	fatfs/ff.c	165;"	d	file:
_DS2E	fatfs/ff.c	173;"	d	file:
_DS2E	fatfs/ff.c	181;"	d	file:
_DS2E	fatfs/ff.c	191;"	d	file:
_DS2S	fatfs/ff.c	164;"	d	file:
_DS2S	fatfs/ff.c	172;"	d	file:
_DS2S	fatfs/ff.c	180;"	d	file:
_DS2S	fatfs/ff.c	190;"	d	file:
_DS3E	fatfs/ff.c	183;"	d	file:
_DS3S	fatfs/ff.c	182;"	d	file:
_EXCVT	fatfs/ff.c	195;"	d	file:
_EXCVT	fatfs/ff.c	202;"	d	file:
_EXCVT	fatfs/ff.c	209;"	d	file:
_EXCVT	fatfs/ff.c	216;"	d	file:
_EXCVT	fatfs/ff.c	223;"	d	file:
_EXCVT	fatfs/ff.c	230;"	d	file:
_EXCVT	fatfs/ff.c	237;"	d	file:
_EXCVT	fatfs/ff.c	244;"	d	file:
_EXCVT	fatfs/ff.c	251;"	d	file:
_EXCVT	fatfs/ff.c	258;"	d	file:
_EXCVT	fatfs/ff.c	265;"	d	file:
_EXCVT	fatfs/ff.c	272;"	d	file:
_EXCVT	fatfs/ff.c	279;"	d	file:
_EXCVT	fatfs/ff.c	286;"	d	file:
_EXCVT	fatfs/ff.c	293;"	d	file:
_EXCVT	fatfs/ff.c	300;"	d	file:
_EXCVT	fatfs/ff.c	307;"	d	file:
_EXCVT	fatfs/ff.c	314;"	d	file:
_EXCVT	fatfs/ff.c	321;"	d	file:
_EXCVT	fatfs/ff.c	328;"	d	file:
_EXCVT	fatfs/ff.c	335;"	d	file:
_FATFS	fatfs/ff.h	18;"	d
_FFCONF	fatfs/ffconf.h	10;"	d
_FS_LOCK	fatfs/ffconf.h	187;"	d
_FS_MINIMIZE	fatfs/ffconf.h	29;"	d
_FS_READONLY	fatfs/ffconf.h	23;"	d
_FS_REENTRANT	fatfs/ffconf.h	175;"	d
_FS_RPATH	fatfs/ffconf.h	116;"	d
_FS_TIMEOUT	fatfs/ffconf.h	176;"	d
_FS_TINY	fatfs/ffconf.h	17;"	d
_GAP	drivers/ir_remote.h	46;"	d
_INTEGER	fatfs/integer.h	6;"	d
_LFN_UNICODE	fatfs/ffconf.h	111;"	d
_MAX_LFN	fatfs/ffconf.h	97;"	d
_MAX_SS	fatfs/ffconf.h	134;"	d
_MULTI_PARTITION	fatfs/ffconf.h	142;"	d
_NOP	drivers/serial_bitbang.h	48;"	d
_SYNC_t	fatfs/ffconf.h	177;"	d
_T	fatfs/ff.h	60;"	d
_T	fatfs/ff.h	67;"	d
_TEXT	fatfs/ff.h	61;"	d
_TEXT	fatfs/ff.h	68;"	d
_USE_ERASE	fatfs/ffconf.h	148;"	d
_USE_FASTSEEK	fatfs/ffconf.h	47;"	d
_USE_FORWARD	fatfs/ffconf.h	55;"	d
_USE_IOCTL	drivers/diskio.h	13;"	d
_USE_LABEL	fatfs/ffconf.h	51;"	d
_USE_LFN	fatfs/ffconf.h	96;"	d
_USE_MKFS	fatfs/ffconf.h	43;"	d
_USE_STRFUNC	fatfs/ffconf.h	39;"	d
_USE_WRITE	drivers/diskio.h	12;"	d
_VOLUMES	fatfs/ffconf.h	130;"	d
_WORD_ACCESS	fatfs/ffconf.h	158;"	d
__ADC_H__	drivers/adc.h	2;"	d
__IR_REMOTE_H__	drivers/ir_remote.h	2;"	d
__PLAYA_H__	ss.h	2;"	d
__PORT_CONFIG_H__	port_config.h	2;"	d
__SERIAL_BITBANG_	drivers/serial_bitbang.h	2;"	d
__SPI_H__	drivers/spi.h	2;"	d
__TIMER_H__	drivers/timer.h	2;"	d
__ds3231_h_	drivers/ds3231.h	2;"	d
analogRead	drivers/adc.c	/^uint16_t analogRead(uint8_t pin)$/;"	f
b	ss.c	/^struct bmp085 b;$/;"	v	typeref:struct:bmp085
bcdtodec	drivers/ds3231.c	/^uint8_t bcdtodec(const uint8_t val)$/;"	f
bits	drivers/ir_remote.h	/^    int bits;                   \/\/ Number of bits in decoded value$/;"	m	struct:__anon2
boost_off	ss.c	/^void boost_off()$/;"	f
boost_on	ss.c	/^void boost_on()$/;"	f
buf	fatfs/ff.h	/^	BYTE	buf[_MAX_SS];	\/* File data read\/write buffer *\/$/;"	m	struct:__anon7
cbi	ss.h	21;"	d
cdir	fatfs/ff.h	/^	DWORD	cdir;			\/* Current directory start cluster (0:root) *\/$/;"	m	struct:__anon6
check_fs	fatfs/ff.c	/^BYTE check_fs (	\/* 0:FAT-VBR, 1:Any BR but not FAT, 2:Not a BR, 3:Disk error *\/$/;"	f	file:
chk_chr	fatfs/ff.c	/^int chk_chr (const char* str, int chr) {$/;"	f	file:
chk_lock	fatfs/ff.c	/^FRESULT chk_lock (	\/* Check if the file can be accessed *\/$/;"	f	file:
chk_mounted	fatfs/ff.c	/^FRESULT chk_mounted (	\/* FR_OK(0): successful, !=0: any error occurred *\/$/;"	f	file:
clear_lock	fatfs/ff.c	/^void clear_lock (	\/* Clear lock entries of the volume *\/$/;"	f	file:
clmt_clust	fatfs/ff.c	/^DWORD clmt_clust (	\/* <2:Error, >=2:Cluster number *\/$/;"	f	file:
clockCyclesPerMicrosecond	ss.h	41;"	d
clockCyclesToMicroseconds	ss.h	42;"	d
cltbl	fatfs/ff.h	/^	DWORD*	cltbl;			\/* Pointer to the cluster link map table (null on file open) *\/$/;"	m	struct:__anon7
clu	fatfs/ff.c	/^	DWORD clu;				\/* File ID 2, directory *\/$/;"	m	struct:__anon4	file:
clust	fatfs/ff.h	/^	DWORD	clust;			\/* Current cluster *\/$/;"	m	struct:__anon8
clust	fatfs/ff.h	/^	DWORD	clust;			\/* Current cluster of fpter *\/$/;"	m	struct:__anon7
clust2sect	fatfs/ff.c	/^DWORD clust2sect (	\/* !=0: Sector number, 0: Failed - invalid cluster# *\/$/;"	f
cmp_lfn	fatfs/ff.c	/^int cmp_lfn (			\/* 1:Matched, 0:Not matched *\/$/;"	f	file:
compare	drivers/ir_remote.c	/^uint8_t compare(const uint16_t oldval, const uint16_t newval)$/;"	f
console_decode	ss.c	/^void console_decode()$/;"	f
console_send_err	ss.c	/^void console_send_err()$/;"	f
console_send_ok	ss.c	/^void console_send_ok()$/;"	f
counter_c	ss.c	/^volatile unsigned long counter_c = 0;   \/\/counts$/;"	v
counter_c_last	ss.c	/^unsigned long counter_c_last = 0;       \/\/counts at start of counter_interval$/;"	v
counter_cpm	ss.c	/^unsigned long counter_cpm;      \/\/counts per interval$/;"	v
counter_prev	ss.c	/^unsigned long counter_prev = 0;$/;"	v
counter_state	ss.c	/^uint8_t counter_state = HIGH;$/;"	v
counter_state_last	ss.c	/^uint8_t counter_state_last = HIGH;$/;"	v
create_chain	fatfs/ff.c	/^DWORD create_chain (	\/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster# *\/$/;"	f	file:
create_name	fatfs/ff.c	/^FRESULT create_name ($/;"	f	file:
csize	fatfs/ff.h	/^	BYTE	csize;			\/* Sectors per cluster (1,2,4...128) *\/$/;"	m	struct:__anon6
ctr	fatfs/ff.c	/^	WORD ctr;				\/* File open counter, 0:none, 0x01..0xFF:read open count, 0x100:write mode *\/$/;"	m	struct:__anon4	file:
database	fatfs/ff.h	/^	DWORD	database;		\/* Data start sector *\/$/;"	m	struct:__anon6
dec_lock	fatfs/ff.c	/^FRESULT dec_lock (	\/* Decrement file open counter *\/$/;"	f	file:
decode_rc5	drivers/ir_remote.c	/^uint8_t decode_rc5(decode_results * results)$/;"	f
decode_results	drivers/ir_remote.h	/^} decode_results;$/;"	t	typeref:struct:__anon2
decode_type	drivers/ir_remote.h	/^    int decode_type;            \/\/ NEC, SONY, RC5, UNKNOWN$/;"	m	struct:__anon2
dectobcd	drivers/ds3231.c	/^uint8_t dectobcd(const uint8_t val)$/;"	f
delay	drivers/timer.c	/^void delay(const uint32_t ms)$/;"	f
delay_c	drivers/serial_bitbang.h	52;"	d
delay_s	drivers/serial_bitbang.h	51;"	d
deselect	drivers/diskio.c	/^void deselect (void)$/;"	f	file:
dir	fatfs/ff.h	/^	BYTE*	dir;			\/* Pointer to the current SFN entry in the win[] *\/$/;"	m	struct:__anon8
dir	ss.c	/^DIR dir;$/;"	v
dir_alloc	fatfs/ff.c	/^FRESULT dir_alloc ($/;"	f	file:
dir_find	fatfs/ff.c	/^FRESULT dir_find ($/;"	f	file:
dir_next	fatfs/ff.c	/^FRESULT dir_next (	\/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch *\/$/;"	f	file:
dir_ptr	fatfs/ff.h	/^	BYTE*	dir_ptr;		\/* Pointer to the directory entry in the window *\/$/;"	m	struct:__anon7
dir_read	fatfs/ff.c	/^FRESULT dir_read ($/;"	f	file:
dir_register	fatfs/ff.c	/^FRESULT dir_register (	\/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_DISK_ERR:Disk error *\/$/;"	f	file:
dir_remove	fatfs/ff.c	/^FRESULT dir_remove (	\/* FR_OK: Successful, FR_DISK_ERR: A disk error *\/$/;"	f	file:
dir_sdi	fatfs/ff.c	/^FRESULT dir_sdi ($/;"	f	file:
dir_sect	fatfs/ff.h	/^	DWORD	dir_sect;		\/* Sector containing the directory entry *\/$/;"	m	struct:__anon7
dirbase	fatfs/ff.h	/^	DWORD	dirbase;		\/* Root directory start sector (FAT32:Cluster#) *\/$/;"	m	struct:__anon6
disk_initialize	drivers/diskio.c	/^DSTATUS disk_initialize ($/;"	f
disk_ioctl	drivers/diskio.c	/^DRESULT disk_ioctl ($/;"	f
disk_read	drivers/diskio.c	/^DRESULT disk_read ($/;"	f
disk_status	drivers/diskio.c	/^DSTATUS disk_status ($/;"	f
disk_timerproc	drivers/diskio.c	/^void disk_timerproc (void)$/;"	f
disk_write	drivers/diskio.c	/^DRESULT disk_write ($/;"	f
drv	fatfs/ff.h	/^	BYTE	drv;			\/* Physical drive number *\/$/;"	m	struct:__anon6
dsect	fatfs/ff.h	/^	DWORD	dsect;			\/* Current data sector of fpter *\/$/;"	m	struct:__anon7
dstatus	ss.c	/^DSTATUS dstatus;                \/\/ disc status set by disk_initialize()$/;"	v
enq_lock	fatfs/ff.c	/^int enq_lock (void)	\/* Check if an entry is available for a new file *\/$/;"	f	file:
ext_dew	ss.c	/^float ext_dew = 0.0;$/;"	v
ext_hum	ss.c	/^float ext_hum = 0.0;$/;"	v
ext_light	ss.c	/^uint8_t ext_light = 0;$/;"	v
ext_pressure	ss.c	/^uint32_t ext_pressure = 0;$/;"	v
ext_temp	ss.c	/^float ext_temp = 0.0;$/;"	v
f	ss.c	/^FIL f;$/;"	v
f_chdir	fatfs/ff.c	/^FRESULT f_chdir ($/;"	f
f_chdrive	fatfs/ff.c	/^FRESULT f_chdrive ($/;"	f
f_chmod	fatfs/ff.c	/^FRESULT f_chmod ($/;"	f
f_close	fatfs/ff.c	/^FRESULT f_close ($/;"	f
f_eof	fatfs/ff.h	236;"	d
f_error	fatfs/ff.h	237;"	d
f_fdisk	fatfs/ff.c	/^FRESULT f_fdisk ($/;"	f
f_forward	fatfs/ff.c	/^FRESULT f_forward ($/;"	f
f_getcwd	fatfs/ff.c	/^FRESULT f_getcwd ($/;"	f
f_getfree	fatfs/ff.c	/^FRESULT f_getfree ($/;"	f
f_getlabel	fatfs/ff.c	/^FRESULT f_getlabel ($/;"	f
f_gets	fatfs/ff.c	/^TCHAR* f_gets ($/;"	f
f_lseek	fatfs/ff.c	/^FRESULT f_lseek ($/;"	f
f_mkdir	fatfs/ff.c	/^FRESULT f_mkdir ($/;"	f
f_mkfs	fatfs/ff.c	/^FRESULT f_mkfs ($/;"	f
f_mount	fatfs/ff.c	/^FRESULT f_mount ($/;"	f
f_open	fatfs/ff.c	/^FRESULT f_open ($/;"	f
f_opendir	fatfs/ff.c	/^FRESULT f_opendir ($/;"	f
f_printf	fatfs/ff.c	/^int f_printf ($/;"	f
f_putc	fatfs/ff.c	/^int f_putc ($/;"	f
f_puts	fatfs/ff.c	/^int f_puts ($/;"	f
f_read	fatfs/ff.c	/^FRESULT f_read ($/;"	f
f_readdir	fatfs/ff.c	/^FRESULT f_readdir ($/;"	f
f_rename	fatfs/ff.c	/^FRESULT f_rename ($/;"	f
f_setlabel	fatfs/ff.c	/^FRESULT f_setlabel ($/;"	f
f_size	fatfs/ff.h	239;"	d
f_stat	fatfs/ff.c	/^FRESULT f_stat ($/;"	f
f_sync	fatfs/ff.c	/^FRESULT f_sync ($/;"	f
f_tell	fatfs/ff.h	238;"	d
f_truncate	fatfs/ff.c	/^FRESULT f_truncate ($/;"	f
f_unlink	fatfs/ff.c	/^FRESULT f_unlink ($/;"	f
f_utime	fatfs/ff.c	/^FRESULT f_utime ($/;"	f
f_write	fatfs/ff.c	/^FRESULT f_write ($/;"	f
false	ss.h	30;"	d
fatbase	fatfs/ff.h	/^	DWORD	fatbase;		\/* FAT start sector *\/$/;"	m	struct:__anon6
fattrib	fatfs/ff.h	/^	BYTE	fattrib;		\/* Attribute *\/$/;"	m	struct:__anon9
fdate	fatfs/ff.h	/^	WORD	fdate;			\/* Last modified date *\/$/;"	m	struct:__anon9
fit_lfn	fatfs/ff.c	/^void fit_lfn ($/;"	f	file:
flag	fatfs/ff.h	/^	BYTE	flag;			\/* File status flags *\/$/;"	m	struct:__anon7
fn	fatfs/ff.h	/^	BYTE*	fn;				\/* Pointer to the SFN (in\/out) {file[8],ext[3],status[1]} *\/$/;"	m	struct:__anon8
fname	fatfs/ff.h	/^	TCHAR	fname[13];		\/* Short file name (8.3 format) *\/$/;"	m	struct:__anon9
follow_path	fatfs/ff.c	/^FRESULT follow_path (	\/* FR_OK(0): successful, !=0: error code *\/$/;"	f	file:
fptr	fatfs/ff.h	/^	DWORD	fptr;			\/* File read\/write pointer (0ed on file open) *\/$/;"	m	struct:__anon7
free_clust	fatfs/ff.h	/^	DWORD	free_clust;		\/* Number of free clusters *\/$/;"	m	struct:__anon6
fs	fatfs/ff.c	/^	FATFS *fs;				\/* File ID 1, volume (NULL:blank entry) *\/$/;"	m	struct:__anon4	file:
fs	fatfs/ff.h	/^	FATFS*	fs;				\/* Pointer to the owner file system object (**do not change order**) *\/$/;"	m	struct:__anon8
fs	fatfs/ff.h	/^	FATFS*	fs;				\/* Pointer to the related file system object (**do not change order**) *\/$/;"	m	struct:__anon7
fs	ss.c	/^FATFS fs;                       \/\/ mounted entity$/;"	v
fs_type	fatfs/ff.h	/^	BYTE	fs_type;		\/* FAT sub-type (0:Not mounted) *\/$/;"	m	struct:__anon6
fsi_flag	fatfs/ff.h	/^	BYTE	fsi_flag;		\/* fsinfo dirty flag (1:must be written back) *\/$/;"	m	struct:__anon6
fsi_sector	fatfs/ff.h	/^	DWORD	fsi_sector;		\/* fsinfo sector (FAT32) *\/$/;"	m	struct:__anon6
fsize	fatfs/ff.h	/^	DWORD	fsize;			\/* File size *\/$/;"	m	struct:__anon7
fsize	fatfs/ff.h	/^	DWORD	fsize;			\/* File size *\/$/;"	m	struct:__anon9
fsize	fatfs/ff.h	/^	DWORD	fsize;			\/* Sectors per FAT *\/$/;"	m	struct:__anon6
ftime	fatfs/ff.h	/^	WORD	ftime;			\/* Last modified time *\/$/;"	m	struct:__anon9
gen_numname	fatfs/ff.c	/^void gen_numname ($/;"	f
get_fat	fatfs/ff.c	/^DWORD get_fat (	\/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status *\/$/;"	f
get_fattime	drivers/diskio.c	/^DWORD get_fattime(void)$/;"	f
get_fileinfo	fatfs/ff.c	/^void get_fileinfo (		\/* No return code *\/$/;"	f	file:
get_rc_level	drivers/ir_remote.c	/^uint16_t get_rc_level(decode_results * results, int *offset, int *used,$/;"	f
hour	drivers/ds3231.h	/^    uint8_t hour;        \/* hours *\/$/;"	m	struct:ts
i2cm_rx	drivers/serial_bitbang.c	/^uint8_t i2cm_rx(uint8_t *buf, const uint16_t length, const uint8_t options)$/;"	f
i2cm_rxfrom	drivers/serial_bitbang.c	/^uint8_t i2cm_rxfrom(const uint8_t slave_address, uint8_t* data, uint16_t length)$/;"	f
i2cm_start	drivers/serial_bitbang.c	/^uint8_t i2cm_start(void)$/;"	f
i2cm_stop	drivers/serial_bitbang.c	/^void i2cm_stop(void)$/;"	f
i2cm_tx	drivers/serial_bitbang.c	/^uint8_t i2cm_tx(const uint8_t data, const uint8_t options)$/;"	f
id	fatfs/ff.h	/^	WORD	id;				\/* File system mount ID *\/$/;"	m	struct:__anon6
id	fatfs/ff.h	/^	WORD	id;				\/* Owner file system mount ID (**do not change order**) *\/$/;"	m	struct:__anon7
id	fatfs/ff.h	/^	WORD	id;				\/* Owner file system mount ID (**do not change order**) *\/$/;"	m	struct:__anon8
idx	fatfs/ff.c	/^	WORD idx;				\/* File ID 3, directory index *\/$/;"	m	struct:__anon4	file:
inc_lock	fatfs/ff.c	/^UINT inc_lock (	\/* Increment file open counter and returns its index (0:int error) *\/$/;"	f	file:
index	fatfs/ff.h	/^	WORD	index;			\/* Current read\/write index number *\/$/;"	m	struct:__anon8
inp2toi	drivers/ds3231.c	/^uint8_t inp2toi(char *cmd, const uint16_t seek)$/;"	f
int_temp	ss.c	/^float int_temp;$/;"	v
ir_decode	drivers/ir_remote.c	/^uint8_t ir_decode(decode_results * results)$/;"	f
ir_delay	ss.c	/^uint16_t ir_delay = 400;        \/\/ delay between repeated button presses$/;"	v
ir_delay_prev	ss.c	/^uint32_t ir_delay_prev = 0;$/;"	v
ir_init	drivers/ir_remote.c	/^void ir_init(void)$/;"	f
ir_resume	drivers/ir_remote.c	/^void ir_resume(void)$/;"	f
irparams	drivers/ir_remote.c	/^volatile irparams_t irparams;$/;"	v
irparams_t	drivers/ir_remote.h	/^} irparams_t;$/;"	t	typeref:struct:__anon1
isdst	drivers/ds3231.h	/^    uint8_t isdst;       \/* daylight saving time *\/$/;"	m	struct:ts
its	ss.c	/^struct it its;$/;"	v	typeref:struct:it
kth_temp	ss.c	/^float kth_temp = 0.0;$/;"	v
last_clust	fatfs/ff.h	/^	DWORD	last_clust;		\/* Last allocated cluster *\/$/;"	m	struct:__anon6
ld_clust	fatfs/ff.c	/^DWORD ld_clust ($/;"	f	file:
lfn	fatfs/ff.h	/^	WCHAR*	lfn;			\/* Pointer to the LFN working buffer *\/$/;"	m	struct:__anon8
lfn_idx	fatfs/ff.h	/^	WORD	lfn_idx;		\/* Last matched LFN index number (0xFFFF:No LFN) *\/$/;"	m	struct:__anon8
lfname	fatfs/ff.h	/^	TCHAR*	lfname;			\/* Pointer to the LFN buffer *\/$/;"	m	struct:__anon9
lfsize	fatfs/ff.h	/^	UINT 	lfsize;			\/* Size of LFN buffer in TCHAR *\/$/;"	m	struct:__anon9
lock_fs	fatfs/ff.c	/^int lock_fs ($/;"	f	file:
lockid	fatfs/ff.h	/^	UINT	lockid;			\/* File lock ID (index of file semaphore table Files[]) *\/$/;"	m	struct:__anon7
log_debug	ss.c	/^void log_debug(const char *s)$/;"	f
loop	ss.c	/^void loop()$/;"	f
main	ss.c	/^void main(void)$/;"	f
mday	drivers/ds3231.h	/^    uint8_t mday;        \/* day of the month *\/$/;"	m	struct:ts
measure_ext	ss.c	/^int measure_ext()$/;"	f
measure_int	ss.c	/^void measure_int()$/;"	f
mem_cmp	fatfs/ff.c	/^int mem_cmp (const void* dst, const void* src, UINT cnt) {$/;"	f	file:
mem_cpy	fatfs/ff.c	/^void mem_cpy (void* dst, const void* src, UINT cnt) {$/;"	f	file:
mem_set	fatfs/ff.c	/^void mem_set (void* dst, int val, UINT cnt) {$/;"	f	file:
microsecondsToClockCycles	ss.h	43;"	d
millis	drivers/timer.c	/^uint32_t millis()$/;"	f
min	drivers/ds3231.h	/^    uint8_t min;         \/* minutes *\/$/;"	m	struct:ts
mon	drivers/ds3231.h	/^    uint8_t mon;         \/* month *\/$/;"	m	struct:ts
move_window	fatfs/ff.c	/^FRESULT move_window ($/;"	f	file:
n_fatent	fatfs/ff.h	/^	DWORD	n_fatent;		\/* Number of FAT entries (= number of clusters + 2) *\/$/;"	m	struct:__anon6
n_fats	fatfs/ff.h	/^	BYTE	n_fats;			\/* Number of FAT copies (1,2) *\/$/;"	m	struct:__anon6
n_rootdir	fatfs/ff.h	/^	WORD	n_rootdir;		\/* Number of root directory entries (FAT12\/16) *\/$/;"	m	struct:__anon6
op_mode	ss.c	/^unsigned char op_mode = OP_AUTOMATIC;$/;"	v
output	ss.c	/^char output[BUFF_OUT];$/;"	v
pad1	fatfs/ff.h	/^	BYTE	pad1;$/;"	m	struct:__anon7
parse_cmd	ss.c	/^void parse_cmd(char *cmd, uint8_t cmdsize)$/;"	f
pd	fatfs/ff.h	/^	BYTE pd;	\/* Physical drive number *\/$/;"	m	struct:__anon5
pick_lfn	fatfs/ff.c	/^int pick_lfn (			\/* 1:Succeeded, 0:Buffer overflow *\/$/;"	f	file:
pin_counter	ss.c	100;"	d	file:
pin_light	ss.c	109;"	d	file:
power_off	drivers/diskio.c	/^void power_off (void)$/;"	f	file:
power_on	drivers/diskio.c	/^void power_on (void)$/;"	f	file:
power_status	drivers/diskio.c	/^int power_status (void)		\/* Socket power state: 0=off, 1=on *\/$/;"	f	file:
pt	fatfs/ff.h	/^	BYTE pt;	\/* Partition: 0:Auto detect, 1-4:Forced partition) *\/$/;"	m	struct:__anon5
put_fat	fatfs/ff.c	/^FRESULT put_fat ($/;"	f
rawbuf	drivers/ir_remote.h	/^    uint16_t rawbuf[RAWBUF];    \/\/ raw data$/;"	m	struct:__anon1
rawbuf	drivers/ir_remote.h	/^    volatile uint16_t *rawbuf;  \/\/ Raw intervals in .5 us ticks$/;"	m	struct:__anon2
rawlen	drivers/ir_remote.h	/^    int rawlen;                 \/\/ Number of records in rawbuf.$/;"	m	struct:__anon2
rawlen	drivers/ir_remote.h	/^    uint8_t rawlen;             \/\/ counter of entries in rawbuf$/;"	m	struct:__anon1
rcvr_datablock	drivers/diskio.c	/^int rcvr_datablock ($/;"	f	file:
rcvr_spi_multi	drivers/diskio.c	/^void rcvr_spi_multi ($/;"	f	file:
rcvstate	drivers/ir_remote.h	/^    uint8_t rcvstate;           \/\/ state machine$/;"	m	struct:__anon1
read_counter	ss.c	/^void read_counter()$/;"	f
recv	ss.c	/^char recv[BUFF_MAX];$/;"	v
recv_size	ss.c	/^uint8_t recv_size = 0;$/;"	v
refresh_prev	ss.c	/^uint32_t refresh_prev = 0;$/;"	v
remove_chain	fatfs/ff.c	/^FRESULT remove_chain ($/;"	f	file:
result_last	ss.c	/^uint32_t result_last = 11111;$/;"	v
results	drivers/ir_remote.c	/^decode_results results;$/;"	v
sbi	ss.h	24;"	d
scl_high	drivers/serial_bitbang.h	27;"	d
scl_low	drivers/serial_bitbang.h	28;"	d
sclust	fatfs/ff.h	/^	DWORD	sclust;			\/* File data start cluster (0:no data cluster, always 0 when fsize is 0) *\/$/;"	m	struct:__anon7
sclust	fatfs/ff.h	/^	DWORD	sclust;			\/* Table start cluster (0:Root dir) *\/$/;"	m	struct:__anon8
sda_high	drivers/serial_bitbang.h	25;"	d
sda_low	drivers/serial_bitbang.h	26;"	d
sec	drivers/ds3231.h	/^    uint8_t sec;         \/* seconds *\/$/;"	m	struct:ts
sect	fatfs/ff.h	/^	DWORD	sect;			\/* Current sector *\/$/;"	m	struct:__anon8
select	drivers/diskio.c	/^int select (void)	\/* 1:Successful, 0:Timeout *\/$/;"	f	file:
send_cmd	drivers/diskio.c	/^BYTE send_cmd (		\/* Returns R1 resp (bit7==1:Send failed) *\/$/;"	f	file:
setup	ss.c	/^void setup()$/;"	f
setup_a2	ss.c	/^void setup_a2()$/;"	f
shtd_prev	ss.c	/^unsigned long shtd_prev = 0;$/;"	v
sleep_period	ss.c	/^unsigned char sleep_period = 1;$/;"	v
sleep_period	ss.c	/^unsigned char sleep_period = 30;$/;"	v
sobj	fatfs/ff.h	/^	_SYNC_t	sobj;			\/* Identifier of sync object *\/$/;"	m	struct:__anon6
spi_disable	drivers/spi.c	/^void spi_disable(void)$/;"	f
spi_init	drivers/spi.c	/^void spi_init(void)$/;"	f
spi_transfer	drivers/spi.c	/^uint8_t spi_transfer(uint8_t data)$/;"	f
spi_transfer_sync	drivers/spi.c	/^void spi_transfer_sync(const uint8_t * dataout, uint8_t * datain, const uint8_t len)$/;"	f
spi_transmit_sync	drivers/spi.c	/^void spi_transmit_sync(const uint8_t * dataout, const uint8_t begin, const uint8_t len)$/;"	f
ssize	fatfs/ff.h	/^	WORD	ssize;			\/* Bytes per sector (512, 1024, 2048 or 4096) *\/$/;"	m	struct:__anon6
st_clust	fatfs/ff.c	/^void st_clust ($/;"	f	file:
stage1	ss.c	/^void stage1()$/;"	f
stage2	ss.c	/^void stage2()$/;"	f
stage3	ss.c	/^void stage3()$/;"	f
stage4	ss.c	/^void stage4()$/;"	f
stage5	ss.c	/^void stage5()$/;"	f
stage6	ss.c	/^void stage6()$/;"	f
stage_num	ss.c	/^uint8_t stage_num = 0;$/;"	v
stage_prev	ss.c	/^unsigned long stage_prev = 0;$/;"	v
stage_started	ss.c	/^uint8_t stage_started[7] = { false, false, false, false, false, false, false };$/;"	v
sum_sfn	fatfs/ff.c	/^BYTE sum_sfn ($/;"	f	file:
sync_fs	fatfs/ff.c	/^FRESULT sync_fs (	\/* FR_OK: successful, FR_DISK_ERR: failed *\/$/;"	f	file:
sync_window	fatfs/ff.c	/^FRESULT sync_window ($/;"	f	file:
t	ss.c	/^struct ts t;$/;"	v	typeref:struct:ts
timer	drivers/ir_remote.h	/^    uint16_t timer;             \/\/ state timer, counts 50uS ticks.$/;"	m	struct:__anon1
timer0_fract	drivers/timer.c	/^static unsigned char timer0_fract = 0;$/;"	v	file:
timer0_millis	drivers/timer.c	/^volatile unsigned long timer0_millis = 0;$/;"	v
timer0_overflow_count	drivers/timer.c	/^volatile unsigned long timer0_overflow_count = 0;$/;"	v
timer_init	drivers/timer.c	/^void timer_init(void)$/;"	f
true	ss.h	29;"	d
ts	drivers/ds3231.h	/^struct ts {$/;"	s
uart1_getc	drivers/uart.c	/^unsigned int uart1_getc(void)$/;"	f
uart1_init	drivers/uart.c	/^void uart1_init(unsigned int baudrate)$/;"	f
uart1_putc	drivers/uart.c	/^void uart1_putc(unsigned char data)$/;"	f
uart1_puts	drivers/uart.c	/^void uart1_puts(const char *s )$/;"	f
uart1_puts_P	drivers/uart.h	189;"	d
uart1_puts_p	drivers/uart.c	/^void uart1_puts_p(const char *progmem_s )$/;"	f
uart_getc	drivers/uart.c	/^unsigned int uart_getc(void)$/;"	f
uart_init	drivers/uart.c	/^void uart_init(unsigned int baudrate)$/;"	f
uart_putc	drivers/uart.c	/^void uart_putc(unsigned char data)$/;"	f
uart_puts	drivers/uart.c	/^void uart_puts(const char *s )$/;"	f
uart_puts_P	drivers/uart.h	174;"	d
uart_puts_p	drivers/uart.c	/^void uart_puts_p(const char *progmem_s )$/;"	f
ui_ir_decode	ss.c	/^uint8_t ui_ir_decode()$/;"	f
unlock_fs	fatfs/ff.c	/^void unlock_fs ($/;"	f	file:
validate	fatfs/ff.c	/^FRESULT validate (	\/* FR_OK(0): The object is valid, !=0: Invalid *\/$/;"	f	file:
value	drivers/ir_remote.h	/^    uint32_t value;             \/\/ Decoded value$/;"	m	struct:__anon2
volbase	fatfs/ff.h	/^	DWORD	volbase;		\/* Volume start sector *\/$/;"	m	struct:__anon6
wait_ready	drivers/diskio.c	/^int wait_ready (	\/* 1:Ready, 0:Timeout *\/$/;"	f	file:
wday	drivers/ds3231.h	/^    uint8_t wday;        \/* day of the week *\/$/;"	m	struct:ts
wflag	fatfs/ff.h	/^	BYTE	wflag;			\/* win[] dirty flag (1:must be written back) *\/$/;"	m	struct:__anon6
win	fatfs/ff.h	/^	BYTE	win[_MAX_SS];	\/* Disk access window for Directory, FAT (and Data on tiny cfg) *\/$/;"	m	struct:__anon6
winsect	fatfs/ff.h	/^	DWORD	winsect;		\/* Current sector appearing in the win[] *\/$/;"	m	struct:__anon6
xbee_off	ss.c	/^void xbee_off()$/;"	f
xbee_on	ss.c	/^void xbee_on()$/;"	f
xchg_spi	drivers/diskio.c	/^BYTE xchg_spi (		\/* Returns received data *\/$/;"	f	file:
xmit_datablock	drivers/diskio.c	/^int xmit_datablock ($/;"	f	file:
xmit_spi_multi	drivers/diskio.c	/^void xmit_spi_multi ($/;"	f	file:
yday	drivers/ds3231.h	/^    uint8_t yday;        \/* day in the year *\/$/;"	m	struct:ts
year	drivers/ds3231.h	/^    int year;            \/* year *\/$/;"	m	struct:ts
year_s	drivers/ds3231.h	/^    uint8_t year_s;      \/* year in short notation*\/$/;"	m	struct:ts
